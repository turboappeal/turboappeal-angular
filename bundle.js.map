{"version":3,"sources":["webpack:///webpack/bootstrap cccb72dfdee89a6e6fea","webpack:///./src/app.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cccb72dfdee89a6e6fea\n **/","// Generated by typings\n// Source: https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/7de6c3dd94feaeb21f20054b9f30d5dabc5efabd/jssha/jssha-1.6.0.d.ts\ndeclare namespace jsSHA {\n    export interface OutputFormatOptions {\n        outputUpper? : boolean;\n        b64Pad? : string;\n    }\n\n    export interface jsSHA {\n        new (srcString:string, inputFormat:string, encoding?:string):jsSHA;\n        getHash(variant:string, format:string, numRounds?:number, outputFormatOpts?:OutputFormatOptions):string;\n        getHMAC(key:string):string;\n        setHMACKey(key:string, inputFormat:string):string;\n        update(key:string):string;\n    }\n}\n\ndeclare var jsSHA: jsSHA.jsSHA;\nexport interface IAuthenticationInterceptor {\n    request(request): ng.IPromise<any>;\n    requestError(requestError): void;\n    response(response): void;\n    responseError(responseError): void;\n}\nexport class AuthenticationProvider implements ng.IServiceProvider{\n    private static $inject: Array<string> = [];\n    private publicKey: string;\n    private privateKey: string;\n    constructor() {\n    }\n    public setPublicKey = (key) => {\n      this.publicKey = key;\n      return this.publicKey;\n    }\n    public setSecretKey = (key) => {\n      this.privateKey = key;\n      return this.privateKey;\n    }\n    public getKey = () => {\n      return this.publicKey;\n    }\n    public getSecret = () => {\n      return this.privateKey;\n    }\n    public $get(){\n        return new AuthenticationProvider;\n    }\n}\nexport class AuthenticationInterceptor implements IAuthenticationInterceptor {\n    private static $inject: Array<string> = ['$q', '$location', '$injector', 'authenticationProvider'];\n    private tsHeader: string;\n    private authKeyHeader: string;\n    private authSigHeader: string;\n    private authHeader: string;\n    private publicKey: string;\n    private privateKey: string;\n    constructor(private $q: ng.IQService, private $location: ng.ILocationService, private $injector: ng.auto.IInjectorService, AuthConfig: AuthenticationProvider) {\n        this.tsHeader = 'Timestamp';\n        this.authKeyHeader = 'Authentication-Key';\n        this.authSigHeader = 'Authentication-Signature';\n        this.authHeader = 'Authorization';\n        this.publicKey = AuthConfig.getKey();\n        this.privateKey = AuthConfig.getSecret();\n    }\n    public request = (req) => {\n      if (req.skipAuthorization)\n          return req;\n\n      // Get the req headers if they exist\n      req.headers = req.headers || {};\n\n      // Already has an Authorization key header\n      if (req.headers[this.authKeyHeader])\n          return req;\n\n      // Timestamp\n      // Method Verb (GET, UPDATE, PUT, POST, DELETE)\n      // Uri (decoded)\n      // Separated with \\n\n      var timestamp = moment().format('MM/DD/YYYY hh:mm:ss A');\n      var hashedSig;\n      req.headers[this.tsHeader] = timestamp;\n      req.headers[this.authKeyHeader] = this.publicKey;\n      var shaObj = new jsSHA('SHA-256', \"TEXT\");\n      shaObj.setHMACKey(this.privateKey, \"TEXT\");\n      shaObj.update(timestamp + '\\n' + req.method + '\\n' + req.url.substr(req.url.indexOf('/')));\n      req.headers[this.authSigHeader] = shaObj.getHMAC(\"HEX\");\n\n      return req;\n    }\n\n    public requestError = (requestError) => {};\n    public response = (response) => {};\n    public responseError = (responseError) => {};\n    public static Factory($q: ng.IQService, $location: ng.ILocationService, $injector: ng.auto.IInjectorService, AuthConfig: AuthenticationProvider){\n        return new AuthenticationInterceptor($q, $location, $injector, AuthConfig);\n    }\n}\nangular.module('turboappealApi', [])\n.provider('turboappealProvider', AuthenticationProvider)\n.factory('turboappealSignature', ['$q', '$location', '$injector', 'turboappealProvider', AuthenticationInterceptor.Factory]);\n\n\n/** WEBPACK FOOTER **\n ** ./src/app.ts\n **/"],"sourceRoot":""}